{"version":3,"file":"218.index.js","mappings":"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","sources":["webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/util.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","webpack://producer_lambdatask/./node_modules/strnum/strnum.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/ignoreAttributes.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/xmlparser/node2json.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/validator.js","webpack://producer_lambdatask/./node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js","webpack://producer_lambdatask/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => Object.assign(input, {\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return Object.assign(config_1, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    });\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import packageInfo from \"../../../package.json\";\nimport { AwsSdkSigV4Signer, NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion, } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n","\nexport const defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n    captureMetaData: false,\n};\n   \nexport const buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nexport const nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nexport function getAllMatches(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n}\n\nexport const isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n}\n\nexport function isExist(v) {\n  return typeof v !== 'undefined';\n}\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexport function merge(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n}\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexport function getValue(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n}\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};","'use strict';\n\nlet METADATA_SYMBOL;\n\nif (typeof Symbol !== \"function\") {\n  METADATA_SYMBOL = \"@@xmlMetadata\";\n} else {\n  METADATA_SYMBOL = Symbol(\"XML Node Metadata\");\n}\n\nexport default class XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node, startIndex) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n    // if requested, add the startIndex\n    if (startIndex !== undefined) {\n      // Note: for now we just overwrite the metadata. If we had more complex metadata,\n      // we might need to do an object append here:  metadata = { ...metadata, startIndex }\n      this.child[this.child.length - 1][METADATA_SYMBOL] = { startIndex };\n    }\n  }\n  /** symbol used for metadata */\n  static getMetaDataSymbol() {\n    return METADATA_SYMBOL;\n  }\n}\n","import {isName} from '../util.js';\n\n//TODO: handle comments\nexport default function readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && hasSeq(xmlData, \"!ENTITY\",i)){\n                    i += 7; \n                    let entityName, val;\n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ entityName ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && hasSeq(xmlData, \"!ELEMENT\",i))  {\n                    i += 8;//Not supported\n                    const {index} = readElementExp(xmlData,i+1);\n                    i = index;\n                }else if( hasBody && hasSeq(xmlData, \"!ATTLIST\",i)){\n                    i += 8;//Not supported\n                    // const {index} = readAttlistExp(xmlData,i+1);\n                    // i = index;\n                }else if( hasBody && hasSeq(xmlData, \"!NOTATION\",i)) {\n                    i += 9;//Not supported\n                    const {index} = readNotationExp(xmlData,i+1);\n                    i = index;\n                }else if( hasSeq(xmlData, \"!--\",i) ) comment = true;\n                else throw new Error(`Invalid DOCTYPE`);\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst skipWhitespace = (data, index) => {\n    while (index < data.length && /\\s/.test(data[index])) {\n        index++;\n    }\n    return index;\n};\n\nfunction readEntityExp(xmlData, i) {    \n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n\n    // Skip leading whitespace after <!ENTITY\n    i = skipWhitespace(xmlData, i);\n\n    // Read entity name\n    let entityName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i]) && xmlData[i] !== '\"' && xmlData[i] !== \"'\") {\n        entityName += xmlData[i];\n        i++;\n    }\n    validateEntityName(entityName);\n\n    // Skip whitespace after entity name\n    i = skipWhitespace(xmlData, i);\n\n    // Check for unsupported constructs (external entities or parameter entities)\n    if (xmlData.substring(i, i + 6).toUpperCase() === \"SYSTEM\") {\n        throw new Error(\"External entities are not supported\");\n    }else if (xmlData[i] === \"%\") {\n        throw new Error(\"Parameter entities are not supported\");\n    }\n\n    // Read entity value (internal entity)\n    let entityValue = \"\";\n    [i, entityValue] = readIdentifierVal(xmlData, i, \"entity\");\n    i--;\n    return [entityName, entityValue, i ];\n}\n\nfunction readNotationExp(xmlData, i) {\n    // Skip leading whitespace after <!NOTATION\n    i = skipWhitespace(xmlData, i);\n\n    // Read notation name\n    let notationName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        notationName += xmlData[i];\n        i++;\n    }\n    validateEntityName(notationName);\n\n    // Skip whitespace after notation name\n    i = skipWhitespace(xmlData, i);\n\n    // Check identifier type (SYSTEM or PUBLIC)\n    const identifierType = xmlData.substring(i, i + 6).toUpperCase();\n    if (identifierType !== \"SYSTEM\" && identifierType !== \"PUBLIC\") {\n        throw new Error(`Expected SYSTEM or PUBLIC, found \"${identifierType}\"`);\n    }\n    i += identifierType.length;\n\n    // Skip whitespace after identifier type\n    i = skipWhitespace(xmlData, i);\n\n    // Read public identifier (if PUBLIC)\n    let publicIdentifier = null;\n    let systemIdentifier = null;\n\n    if (identifierType === \"PUBLIC\") {\n        [i, publicIdentifier ] = readIdentifierVal(xmlData, i, \"publicIdentifier\");\n\n        // Skip whitespace after public identifier\n        i = skipWhitespace(xmlData, i);\n\n        // Optionally read system identifier\n        if (xmlData[i] === '\"' || xmlData[i] === \"'\") {\n            [i, systemIdentifier ] = readIdentifierVal(xmlData, i,\"systemIdentifier\");\n        }\n    } else if (identifierType === \"SYSTEM\") {\n        // Read system identifier (mandatory for SYSTEM)\n        [i, systemIdentifier ] = readIdentifierVal(xmlData, i, \"systemIdentifier\");\n\n        if (!systemIdentifier) {\n            throw new Error(\"Missing mandatory system identifier for SYSTEM notation\");\n        }\n    }\n    \n    return {notationName, publicIdentifier, systemIdentifier, index: --i};\n}\n\nfunction readIdentifierVal(xmlData, i, type) {\n    let identifierVal = \"\";\n    const startChar = xmlData[i];\n    if (startChar !== '\"' && startChar !== \"'\") {\n        throw new Error(`Expected quoted string, found \"${startChar}\"`);\n    }\n    i++;\n\n    while (i < xmlData.length && xmlData[i] !== startChar) {\n        identifierVal += xmlData[i];\n        i++;\n    }\n\n    if (xmlData[i] !== startChar) {\n        throw new Error(`Unterminated ${type} value`);\n    }\n    i++;\n    return [i, identifierVal];\n}\n\nfunction readElementExp(xmlData, i) {\n    // <!ELEMENT br EMPTY>\n    // <!ELEMENT div ANY>\n    // <!ELEMENT title (#PCDATA)>\n    // <!ELEMENT book (title, author+)>\n    // <!ELEMENT name (content-model)>\n    \n    // Skip leading whitespace after <!ELEMENT\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    if (!validateEntityName(elementName)) {\n        throw new Error(`Invalid element name: \"${elementName}\"`);\n    }\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n    let contentModel = \"\";\n    // Expect '(' to start content model\n    if(xmlData[i] === \"E\" && hasSeq(xmlData, \"MPTY\",i)) i+=4;\n    else if(xmlData[i] === \"A\" && hasSeq(xmlData, \"NY\",i)) i+=2;\n    else if (xmlData[i] === \"(\") {\n        i++; // Move past '('\n\n        // Read content model\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            contentModel += xmlData[i];\n            i++;\n        }\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated content model\");\n        }\n\n    }else{\n        throw new Error(`Invalid Element Expression, found \"${xmlData[i]}\"`);\n    }\n    \n    return {\n        elementName,\n        contentModel: contentModel.trim(),\n        index: i\n    };\n}\n\nfunction readAttlistExp(xmlData, i) {\n    // Skip leading whitespace after <!ATTLIST\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    validateEntityName(elementName)\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute name\n    let attributeName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        attributeName += xmlData[i];\n        i++;\n    }\n\n    // Validate attribute name\n    if (!validateEntityName(attributeName)) {\n        throw new Error(`Invalid attribute name: \"${attributeName}\"`);\n    }\n\n    // Skip whitespace after attribute name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute type\n    let attributeType = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"NOTATION\") {\n        attributeType = \"NOTATION\";\n        i += 8; // Move past \"NOTATION\"\n\n        // Skip whitespace after \"NOTATION\"\n        i = skipWhitespace(xmlData, i);\n\n        // Expect '(' to start the list of notations\n        if (xmlData[i] !== \"(\") {\n            throw new Error(`Expected '(', found \"${xmlData[i]}\"`);\n        }\n        i++; // Move past '('\n\n        // Read the list of allowed notations\n        let allowedNotations = [];\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            let notation = \"\";\n            while (i < xmlData.length && xmlData[i] !== \"|\" && xmlData[i] !== \")\") {\n                notation += xmlData[i];\n                i++;\n            }\n\n            // Validate notation name\n            notation = notation.trim();\n            if (!validateEntityName(notation)) {\n                throw new Error(`Invalid notation name: \"${notation}\"`);\n            }\n\n            allowedNotations.push(notation);\n\n            // Skip '|' separator or exit loop\n            if (xmlData[i] === \"|\") {\n                i++; // Move past '|'\n                i = skipWhitespace(xmlData, i); // Skip optional whitespace after '|'\n            }\n        }\n\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated list of notations\");\n        }\n        i++; // Move past ')'\n\n        // Store the allowed notations as part of the attribute type\n        attributeType += \" (\" + allowedNotations.join(\"|\") + \")\";\n    } else {\n        // Handle simple types (e.g., CDATA, ID, IDREF, etc.)\n        while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n            attributeType += xmlData[i];\n            i++;\n        }\n\n        // Validate simple attribute type\n        const validTypes = [\"CDATA\", \"ID\", \"IDREF\", \"IDREFS\", \"ENTITY\", \"ENTITIES\", \"NMTOKEN\", \"NMTOKENS\"];\n        if (!validTypes.includes(attributeType.toUpperCase())) {\n            throw new Error(`Invalid attribute type: \"${attributeType}\"`);\n        }\n    }\n\n    // Skip whitespace after attribute type\n    i = skipWhitespace(xmlData, i);\n\n    // Read default value\n    let defaultValue = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"#REQUIRED\") {\n        defaultValue = \"#REQUIRED\";\n        i += 8;\n    } else if (xmlData.substring(i, i + 7).toUpperCase() === \"#IMPLIED\") {\n        defaultValue = \"#IMPLIED\";\n        i += 7;\n    } else {\n        [i, defaultValue] = readIdentifierVal(xmlData, i, \"ATTLIST\");\n    }\n\n    return {\n        elementName,\n        attributeName,\n        attributeType,\n        defaultValue,\n        index: i\n    }\n}\n\nfunction hasSeq(data, seq,i){\n    for(let j=0;j<seq.length;j++){\n        if(seq[j]!==data[i+j+1]) return false;\n    }\n    return true;\n}\n\nfunction validateEntityName(name){\n    if (isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\n// const octRegex = /^0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n \nconst consider = {\n    hex :  true,\n    // oct: false,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true,\n    //skipLike: /regex/\n};\n\nexport default function toNumber(str, options = {}){\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    \n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if(str===\"0\") return 0;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return parse_int(trimmedStr, 16);\n    // }else if (options.oct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    }else if (trimmedStr.search(/.+[eE].+/)!== -1) { //eNotation\n        return resolveEnotation(str,trimmedStr,options);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        // +00.123 => [ , '+', '00', '.123', ..\n        if(match){\n            const sign = match[1] || \"\";\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            const decimalAdjacentToLeadingZeros = sign ? // 0., -00., 000.\n                str[leadingZeros.length+1] === \".\" \n                : str[leadingZeros.length] === \".\";\n\n            //trim ending zeros for floating number\n            if(!options.leadingZeros //leading zeros are not allowed\n                && (leadingZeros.length > 1 \n                    || (leadingZeros.length === 1 && !decimalAdjacentToLeadingZeros))){\n                // 00, 00.3, +03.24, 03, 03.24\n                return str;\n            }\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const parsedStr = String(num);\n\n                if( num === 0) return num;\n                if(parsedStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    if(parsedStr === \"0\") return num; //0.0\n                    else if(parsedStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( parsedStr === `${sign}${numTrimmedByZeros}`) return num;\n                    else return str;\n                }\n                \n                let n = leadingZeros? numTrimmedByZeros : trimmedStr;\n                if(leadingZeros){\n                    // -009 => -9\n                    return (n === parsedStr) || (sign+n === parsedStr) ? num : str\n                }else  {\n                    // +9\n                    return (n === parsedStr) || (n === sign+parsedStr) ? num : str\n                }\n            }\n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\nconst eNotationRegx = /^([-+])?(0*)(\\d*(\\.\\d*)?[eE][-\\+]?\\d+)$/;\nfunction resolveEnotation(str,trimmedStr,options){\n    if(!options.eNotation) return str;\n    const notation = trimmedStr.match(eNotationRegx); \n    if(notation){\n        let sign = notation[1] || \"\";\n        const eChar = notation[3].indexOf(\"e\") === -1 ? \"E\" : \"e\";\n        const leadingZeros = notation[2];\n        const eAdjacentToLeadingZeros = sign ? // 0E.\n            str[leadingZeros.length+1] === eChar \n            : str[leadingZeros.length] === eChar;\n\n        if(leadingZeros.length > 1 && eAdjacentToLeadingZeros) return str;\n        else if(leadingZeros.length === 1 \n            && (notation[3].startsWith(`.${eChar}`) || notation[3][0] === eChar)){\n                return Number(trimmedStr);\n        }else if(options.leadingZeros && !eAdjacentToLeadingZeros){ //accept with leading zeros\n            //remove leading 0s\n            trimmedStr = (notation[1] || \"\") + notation[3];\n            return Number(trimmedStr);\n        }else return str;\n    }else{\n        return str;\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substring(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\n\nfunction parse_int(numStr, base){\n    //polyfill\n    if(parseInt) return parseInt(numStr, base);\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\n}","'use strict';\n///@ts-check\n\nimport {getAllMatches, isExist} from '../util.js';\nimport xmlNode from './xmlNode.js';\nimport readDocType from './DocTypeReader.js';\nimport toNumber from \"strnum\";\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nexport default class OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (this.options.ignoreAttributes !== true && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      if (this.ignoreAttributesFn(attrName, jPath)) {\n        continue\n      }\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath, i);\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        const startIndex = i;\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath, startIndex);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath, startIndex){\n  // unset startIndex if not requested\n  if (!this.options.captureMetaData) startIndex = undefined;\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  } else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode, startIndex);\n  }else{\n    currentNode.addChild(childNode, startIndex);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = currentNode.child.length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n","export default function getIgnoreAttributesFn(ignoreAttributes) {\n    if (typeof ignoreAttributes === 'function') {\n        return ignoreAttributes\n    }\n    if (Array.isArray(ignoreAttributes)) {\n        return (attrName) => {\n            for (const pattern of ignoreAttributes) {\n                if (typeof pattern === 'string' && attrName === pattern) {\n                    return true\n                }\n                if (pattern instanceof RegExp && pattern.test(attrName)) {\n                    return true\n                }\n            }\n        }\n    }\n    return () => false\n}","'use strict';\n\nimport XmlNode from './xmlNode.js';\n\nconst METADATA_SYMBOL = XmlNode.getMetaDataSymbol();\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nexport default function prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n      if (tagObj[METADATA_SYMBOL] !== undefined) {\n        val[METADATA_SYMBOL] = tagObj[METADATA_SYMBOL]; // copy over metadata\n      }\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","'use strict';\n\nimport {getAllMatches, isName} from './util.js';\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexport function validate(xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","import { buildOptions} from './OptionsBuilder.js';\nimport OrderedObjParser from './OrderedObjParser.js';\nimport prettify from './node2json.js';\nimport {validate} from \"../validator.js\";\nimport XmlNode from './xmlNode.js';\n\nexport default class XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n\n    /**\n     * Returns a Symbol that can be used to access the metadata\n     * property on a node.\n     * \n     * If Symbol is not available in the environment, an ordinary property is used\n     * and the name of the property is here returned.\n     * \n     * The XMLMetaData property is only present when `captureMetaData`\n     * is true in the options.\n     */\n    static getMetaDataSymbol() {\n        return XmlNode.getMetaDataSymbol();\n    }\n}\n","import { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        let parsedObj;\n        try {\n            parsedObj = parser.parse(encoded, true);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"names":["defaultSTSHttpAuthSchemeParametersProvider","async","config","context","input","operation","region","Error","defaultSTSHttpAuthSchemeProvider","authParameters","options","push","schemeId","signingProperties","name","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","commonParams","UseGlobalEndpoint","type","UseFIPS","Endpoint","Region","UseDualStack","F","G","H","I","J","a","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","ruleSet","version","parameters","rules","conditions","endpoint","url","properties","authSchemes","signingName","signingRegion","headers","error","cache","size","params","defaultEndpointResolver","endpointParams","get","logger","aws","STSClient","constructor","configuration","_config_0","process","defaultsMode","defaultConfigProvider","then","clientSharedValues","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","serviceId","urlParser","utf8Decoder","utf8Encoder","loaderConfig","profile","runtime","authSchemePreference","NODE_AUTH_SCHEME_PREFERENCE_OPTIONS","bodyLengthChecker","defaultUserAgentProvider","clientVersion","idProps","credentialDefaultProvider","__config","maxAttempts","requestHandler","create","retryMode","default","sha256","bind","streamCollector","useDualstackEndpoint","useFipsEndpoint","userAgentAppId","super","this","initConfig","_config_1","Object","assign","useGlobalEndpoint","defaultSigningName","_config_2","_config_3","_config_4","_config_5","_config_8","runtimeConfig","extensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","getHttpAuthExtensionConfiguration","forEach","extension","configure","resolveRuntimeExtensions","config_0","stsClientCtor","config_1","resolveAwsSdkSigV4Config","resolveHttpAuthSchemeConfig","middlewareStack","use","httpAuthSchemeParametersProvider","identityProviderConfigProvider","destroy","STSServiceException","setPrototypeOf","prototype","CredentialsFilterSensitiveLog","obj","SecretAccessKey","AssumeRoleResponseFilterSensitiveLog","Credentials","ExpiredTokenException","$fault","opts","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","WebIdentityToken","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","IDPCommunicationErrorException","defaultOptions","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","allowBooleanAttributes","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","eNotation","tagValueProcessor","tagName","val","attributeValueProcessor","attrName","stopNodes","alwaysCreateTextNode","isArray","commentPropName","unpairedTags","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","updateTag","jPath","attrs","captureMetaData","nameStartChar","regexName","RegExp","getAllMatches","string","regex","matches","match","exec","allmatches","startIndex","lastIndex","length","len","isName","METADATA_SYMBOL","Symbol","XmlNode","tagname","child","add","key","addChild","node","keys","undefined","getMetaDataSymbol","readDocType","xmlData","entities","angleBracketsCount","hasBody","comment","exp","hasSeq","entityName","readEntityExp","indexOf","regx","readElementExp","readNotationExp","skipWhitespace","data","test","validateEntityName","substring","toUpperCase","entityValue","readIdentifierVal","notationName","identifierType","publicIdentifier","systemIdentifier","identifierVal","startChar","elementName","contentModel","trim","seq","hexRegex","numRegex","consider","decimalPoint","eNotationRegx","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","ampEntity","_","str","String","fromCodePoint","Number","parseInt","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","saveTextToParentTag","ignoreAttributesFn","Array","pattern","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","newval","parseValue","tags","split","prefix","charAt","attrsRegx","attrStr","oldVal","aName","newVal","attrCollection","replace","xmlObj","textData","closeIndex","findClosingIndex","colonIndex","substr","lastTagName","lastIndexOf","propIndex","pop","tagData","readTagExp","childNode","tagExp","attrExpPresent","endIndex","result","rawTagName","lastTag","tagContent","entity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","search","trimStart","openTagCount","shouldParse","trimmedStr","skipLike","numStr","window","parse_int","notation","sign","eChar","eAdjacentToLeadingZeros","startsWith","resolveEnotation","numTrimmedByZeros","decimalAdjacentToLeadingZeros","num","parsedStr","toNumber","isExist","prettify","compress","arr","text","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","hasOwnProperty","attrMap","jpath","atrrName","propCount","isWhiteSpace","char","readPI","start","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","readAttributeStr","tagClosed","value","validAttrStrRegxp","validateAttributeString","attrNames","getPositionFromMatch","validateAttrName","validateAmpersand","re","validateNumberAmpersand","count","code","message","lineNumber","err","msg","line","col","validateTagName","lines","XMLParser","buildOptions","parse","validationOption","toString","tagFound","reachedRoot","tagStartPos","closingTag","attrStrStart","isValid","otg","openPos","afterAmp","JSON","stringify","map","validate","orderedObjParser","orderedResult","addEntity","parseXmlBody","streamBody","encoded","parser","includes","parsedObj","defineProperty","parsedObjToReturn","parseXmlErrorBody","errorBody","Message","se_AssumeRoleCommand","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","buildHttpRpcRequest","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","de_AssumeRoleCommand","output","statusCode","de_CommandError","contents","de_AssumeRoleResponse","AssumeRoleResult","$metadata","deserializeMetadata","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","AssumeRoleWithWebIdentityResult","parsedOutput","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPCommunicationErrorExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","parsedBody","throwDefaultError","deserialized","de_ExpiredTokenException","exception","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","memberEntries","se_policyDescriptorListType","PolicyArns","_P","_DS","_T","se_tagListType","Tags","_TTK","se_tagKeyListType","TransitiveTagKeys","_EI","_SN","_TC","_SI","_PC","se_ProvidedContextsListType","ProvidedContexts","_WIT","_PI","counter","entry","se_PolicyDescriptorType","_a","se_ProvidedContext","_PAr","_CA","se_Tag","_K","_Va","de_AssumedRoleUser","_ARI","_Ar","_C","de_Credentials","_ARU","_PPS","_SFWIT","_Pr","_Au","_AKI","_SAK","_ST","_E","_m","httpStatusCode","requestId","extendedRequestId","cfId","path","resolvedHostname","hostname","protocol","port","basePath","method","endsWith","slice","formEntries","join","Code","AssumeRoleCommand","classBuilder","ep","Command","cs","serialize","deserialize","getEndpointParameterInstructions","f","ser","de","build","AssumeRoleWithWebIdentityCommand","commands","ASSUME_ROLE_DEFAULT_REGION","getAccountIdFromAssumedRoleUser","assumedRoleUser","Arn","arnComponents","resolveRegion","_region","_parentRegion","credentialProviderLogger","parentRegion","debug","isH2","metadata","handlerProtocol","getCustomizableStsClientCtor","baseCtor","customizations","customization","stsOptions","stsPlugins","stsClient","closureSourceCreds","sourceCreds","parentClientConfig","resolvedRegion","isCompatibleRequestHandler","AssumedRoleUser","send","AccessKeyId","RoleArn","accountId","accessKeyId","secretAccessKey","sessionToken","SessionToken","expiration","Expiration","CredentialScope","credentialScope","setCredentialFeature"],"sourceRoot":""}